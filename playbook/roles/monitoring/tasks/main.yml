---
- name: Monitoring | test
  ansible.builtin.debug:
    msg: System 

- name: Monitoring | install packages
  become: true
  become_method: sudo
  yum:
    name:
      - vim
      - vim-enhanced
      - mc
      - wget

- name: Monitoring | copy /etc/systemd/system/node_exporter.service
  become: true
  become_method: sudo
  ansible.builtin.template:
    src: ./templates/node_exporter.service
    dest: /etc/systemd/system/node_exporter.service

- name: Monitoring | copy /etc/systemd/system/prometheus.service
  become: true
  become_method: sudo
  ansible.builtin.template:
    src: ./templates/prometheus.service
    dest: /etc/systemd/system/prometheus.service

- name: Monitoring | copy /etc/systemd/system/alertmanager.service
  become: true
  become_method: sudo
  ansible.builtin.template:
    src: ./templates/alertmanager.service
    dest: /etc/systemd/system/alertmanager.service

- name: Monitoring | copy prometheus.yml
  become: true
  become_method: sudo
  ansible.builtin.template:
    src: ./templates/prometheus.yml
    dest: /home/ilya/prometheus.yml

- name: Monitoring | copy rules.yml
  become: true
  become_method: sudo
  ansible.builtin.copy:
    src: ./templates/rules.yml
    dest: /home/ilya/rules.yml

- name: Monitoring | copy alertmanager.yml
  become: true
  become_method: sudo
  ansible.builtin.copy:
    src: ./templates/alertmanager.yml
    dest: /home/ilya/alertmanager.yml

- name: Monitoring | copy /etc/yum.repos.d/grafana.repo
  become: true
  become_method: sudo
  ansible.builtin.template:
    src: ./templates/grafana.repo
    dest: /etc/yum.repos.d/grafana.repo

- name: Monitoring | Install, Enable and restart node_exporter, prometheus, alertmanager
  become: true
  become_method: sudo
  ansible.builtin.shell: |
      wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
      tar zxvf node_exporter-*.linux-amd64.tar.gz
      cd node_exporter-*.linux-amd64
      cp node_exporter /usr/local/bin/
      useradd --no-create-home --shell /bin/false nodeusr
      chown -R nodeusr:nodeusr /usr/local/bin/node_exporter
      systemctl daemon-reload
      systemctl enable node_exporter
      systemctl start node_exporter
      cd ..
      wget https://github.com/prometheus/prometheus/releases/download/v2.37.0/prometheus-2.37.0.linux-amd64.tar.gz
      mkdir /etc/prometheus
      mkdir /var/lib/prometheus
      tar zxvf prometheus-*.linux-amd64.tar.gz
      cd prometheus-*.linux-amd64
      cp prometheus promtool /usr/local/bin/
      cp -r console_libraries consoles /etc/prometheus
      cd ..
      cp -r prometheus.yml rules.yml /etc/prometheus
      mkdir /etc/alertmanager
      cp -r alertmanager.yml /etc/alertmanager/
      useradd --no-create-home --shell /bin/false prometheus
      chown -R prometheus:prometheus /etc/prometheus /var/lib/prometheus
      chown prometheus:prometheus /usr/local/bin/{prometheus,promtool}
      systemctl daemon-reload
      systemctl enable prometheus
      chown -R prometheus:prometheus /var/lib/prometheus
      chown -R prometheus:prometheus /etc/prometheus/alertmanager.yml
      systemctl start prometheus
      wget https://github.com/prometheus/alertmanager/releases/download/v0.24.0/alertmanager-0.24.0.linux-amd64.tar.gz
      mkdir /var/lib/prometheus/alertmanager
      tar zxvf alertmanager-*.linux-amd64.tar.gz
      cd alertmanager-*.linux-amd64
      cp alertmanager amtool /usr/local/bin/
      cd ..
      useradd --no-create-home --shell /bin/false alertmanager
      chown -R alertmanager:alertmanager /etc/alertmanager /var/lib/prometheus/alertmanager
      chown alertmanager:alertmanager /usr/local/bin/{alertmanager,amtool}
      systemctl daemon-reload
      systemstl enable alertmanager
      systemctl start alertmanager
      cd ..

- name: Monitoring | install grafana
  become: true
  become_method: sudo
  yum:
    name:
      - grafana

- name: Monitoring | rm datasource and dashdoards
  become: true
  become_method: sudo
  ansible.builtin.shell: |
      rm /etc/grafana/provisioning/datasources/* -f
      rm /etc/grafana/provisioning/dashboards/* -f
  ignore_errors: true

- name: Monitoring | copy /etc/grafana/provisioning/dashboards/dashdoard.yml
  become: true
  become_method: sudo
  ansible.builtin.template:
    src: ./templates/dashdoard.yml
    dest: /etc/grafana/provisioning/dashboards/dashdoard.yml

- name: Monitoring | copy /etc/grafana/provisioning/dashboards/node-exporter-full.json
  become: true
  become_method: sudo
  ansible.builtin.copy:
    src: ./templates/node-exporter-full.json
    dest: /etc/grafana/provisioning/dashboards/node-exporter-full.json


- name: Monitoring | copy /etc/grafana/datasources/datasource.yml
  become: true
  become_method: sudo
  ansible.builtin.template:
    src: ./templates/datasource.yml
    dest: /etc/grafana/provisioning/datasources/datasource.yml
      
- name: Monitoring | Enable and restart grafana
  become: true
  become_method: sudo
  ansible.builtin.shell: |
      systemctl enable grafana-server
      systemctl restart grafana-server
